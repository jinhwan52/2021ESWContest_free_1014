--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_decode 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


-- Copyright (C) 2016  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3251w[2..0]	: WIRE;
	w_anode3264w[3..0]	: WIRE;
	w_anode3281w[3..0]	: WIRE;
	w_anode3291w[3..0]	: WIRE;
	w_anode3301w[3..0]	: WIRE;
	w_anode3311w[3..0]	: WIRE;
	w_anode3321w[3..0]	: WIRE;
	w_anode3331w[3..0]	: WIRE;
	w_anode3341w[3..0]	: WIRE;
	w_anode3353w[2..0]	: WIRE;
	w_anode3362w[3..0]	: WIRE;
	w_anode3373w[3..0]	: WIRE;
	w_anode3383w[3..0]	: WIRE;
	w_anode3393w[3..0]	: WIRE;
	w_anode3403w[3..0]	: WIRE;
	w_anode3413w[3..0]	: WIRE;
	w_anode3423w[3..0]	: WIRE;
	w_anode3433w[3..0]	: WIRE;
	w_anode3444w[2..0]	: WIRE;
	w_anode3453w[3..0]	: WIRE;
	w_anode3464w[3..0]	: WIRE;
	w_anode3474w[3..0]	: WIRE;
	w_anode3484w[3..0]	: WIRE;
	w_anode3494w[3..0]	: WIRE;
	w_anode3504w[3..0]	: WIRE;
	w_anode3514w[3..0]	: WIRE;
	w_anode3524w[3..0]	: WIRE;
	w_anode3535w[2..0]	: WIRE;
	w_anode3544w[3..0]	: WIRE;
	w_anode3555w[3..0]	: WIRE;
	w_anode3565w[3..0]	: WIRE;
	w_anode3575w[3..0]	: WIRE;
	w_anode3585w[3..0]	: WIRE;
	w_anode3595w[3..0]	: WIRE;
	w_anode3605w[3..0]	: WIRE;
	w_anode3615w[3..0]	: WIRE;
	w_data3249w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode3615w[3..3], w_anode3605w[3..3], w_anode3595w[3..3], w_anode3585w[3..3], w_anode3575w[3..3], w_anode3565w[3..3], w_anode3555w[3..3], w_anode3544w[3..3]), ( w_anode3524w[3..3], w_anode3514w[3..3], w_anode3504w[3..3], w_anode3494w[3..3], w_anode3484w[3..3], w_anode3474w[3..3], w_anode3464w[3..3], w_anode3453w[3..3]), ( w_anode3433w[3..3], w_anode3423w[3..3], w_anode3413w[3..3], w_anode3403w[3..3], w_anode3393w[3..3], w_anode3383w[3..3], w_anode3373w[3..3], w_anode3362w[3..3]), ( w_anode3341w[3..3], w_anode3331w[3..3], w_anode3321w[3..3], w_anode3311w[3..3], w_anode3301w[3..3], w_anode3291w[3..3], w_anode3281w[3..3], w_anode3264w[3..3]));
	w_anode3251w[] = ( (w_anode3251w[1..1] & (! data_wire[4..4])), (w_anode3251w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3264w[] = ( (w_anode3264w[2..2] & (! w_data3249w[2..2])), (w_anode3264w[1..1] & (! w_data3249w[1..1])), (w_anode3264w[0..0] & (! w_data3249w[0..0])), w_anode3251w[2..2]);
	w_anode3281w[] = ( (w_anode3281w[2..2] & (! w_data3249w[2..2])), (w_anode3281w[1..1] & (! w_data3249w[1..1])), (w_anode3281w[0..0] & w_data3249w[0..0]), w_anode3251w[2..2]);
	w_anode3291w[] = ( (w_anode3291w[2..2] & (! w_data3249w[2..2])), (w_anode3291w[1..1] & w_data3249w[1..1]), (w_anode3291w[0..0] & (! w_data3249w[0..0])), w_anode3251w[2..2]);
	w_anode3301w[] = ( (w_anode3301w[2..2] & (! w_data3249w[2..2])), (w_anode3301w[1..1] & w_data3249w[1..1]), (w_anode3301w[0..0] & w_data3249w[0..0]), w_anode3251w[2..2]);
	w_anode3311w[] = ( (w_anode3311w[2..2] & w_data3249w[2..2]), (w_anode3311w[1..1] & (! w_data3249w[1..1])), (w_anode3311w[0..0] & (! w_data3249w[0..0])), w_anode3251w[2..2]);
	w_anode3321w[] = ( (w_anode3321w[2..2] & w_data3249w[2..2]), (w_anode3321w[1..1] & (! w_data3249w[1..1])), (w_anode3321w[0..0] & w_data3249w[0..0]), w_anode3251w[2..2]);
	w_anode3331w[] = ( (w_anode3331w[2..2] & w_data3249w[2..2]), (w_anode3331w[1..1] & w_data3249w[1..1]), (w_anode3331w[0..0] & (! w_data3249w[0..0])), w_anode3251w[2..2]);
	w_anode3341w[] = ( (w_anode3341w[2..2] & w_data3249w[2..2]), (w_anode3341w[1..1] & w_data3249w[1..1]), (w_anode3341w[0..0] & w_data3249w[0..0]), w_anode3251w[2..2]);
	w_anode3353w[] = ( (w_anode3353w[1..1] & (! data_wire[4..4])), (w_anode3353w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3362w[] = ( (w_anode3362w[2..2] & (! w_data3249w[2..2])), (w_anode3362w[1..1] & (! w_data3249w[1..1])), (w_anode3362w[0..0] & (! w_data3249w[0..0])), w_anode3353w[2..2]);
	w_anode3373w[] = ( (w_anode3373w[2..2] & (! w_data3249w[2..2])), (w_anode3373w[1..1] & (! w_data3249w[1..1])), (w_anode3373w[0..0] & w_data3249w[0..0]), w_anode3353w[2..2]);
	w_anode3383w[] = ( (w_anode3383w[2..2] & (! w_data3249w[2..2])), (w_anode3383w[1..1] & w_data3249w[1..1]), (w_anode3383w[0..0] & (! w_data3249w[0..0])), w_anode3353w[2..2]);
	w_anode3393w[] = ( (w_anode3393w[2..2] & (! w_data3249w[2..2])), (w_anode3393w[1..1] & w_data3249w[1..1]), (w_anode3393w[0..0] & w_data3249w[0..0]), w_anode3353w[2..2]);
	w_anode3403w[] = ( (w_anode3403w[2..2] & w_data3249w[2..2]), (w_anode3403w[1..1] & (! w_data3249w[1..1])), (w_anode3403w[0..0] & (! w_data3249w[0..0])), w_anode3353w[2..2]);
	w_anode3413w[] = ( (w_anode3413w[2..2] & w_data3249w[2..2]), (w_anode3413w[1..1] & (! w_data3249w[1..1])), (w_anode3413w[0..0] & w_data3249w[0..0]), w_anode3353w[2..2]);
	w_anode3423w[] = ( (w_anode3423w[2..2] & w_data3249w[2..2]), (w_anode3423w[1..1] & w_data3249w[1..1]), (w_anode3423w[0..0] & (! w_data3249w[0..0])), w_anode3353w[2..2]);
	w_anode3433w[] = ( (w_anode3433w[2..2] & w_data3249w[2..2]), (w_anode3433w[1..1] & w_data3249w[1..1]), (w_anode3433w[0..0] & w_data3249w[0..0]), w_anode3353w[2..2]);
	w_anode3444w[] = ( (w_anode3444w[1..1] & data_wire[4..4]), (w_anode3444w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3453w[] = ( (w_anode3453w[2..2] & (! w_data3249w[2..2])), (w_anode3453w[1..1] & (! w_data3249w[1..1])), (w_anode3453w[0..0] & (! w_data3249w[0..0])), w_anode3444w[2..2]);
	w_anode3464w[] = ( (w_anode3464w[2..2] & (! w_data3249w[2..2])), (w_anode3464w[1..1] & (! w_data3249w[1..1])), (w_anode3464w[0..0] & w_data3249w[0..0]), w_anode3444w[2..2]);
	w_anode3474w[] = ( (w_anode3474w[2..2] & (! w_data3249w[2..2])), (w_anode3474w[1..1] & w_data3249w[1..1]), (w_anode3474w[0..0] & (! w_data3249w[0..0])), w_anode3444w[2..2]);
	w_anode3484w[] = ( (w_anode3484w[2..2] & (! w_data3249w[2..2])), (w_anode3484w[1..1] & w_data3249w[1..1]), (w_anode3484w[0..0] & w_data3249w[0..0]), w_anode3444w[2..2]);
	w_anode3494w[] = ( (w_anode3494w[2..2] & w_data3249w[2..2]), (w_anode3494w[1..1] & (! w_data3249w[1..1])), (w_anode3494w[0..0] & (! w_data3249w[0..0])), w_anode3444w[2..2]);
	w_anode3504w[] = ( (w_anode3504w[2..2] & w_data3249w[2..2]), (w_anode3504w[1..1] & (! w_data3249w[1..1])), (w_anode3504w[0..0] & w_data3249w[0..0]), w_anode3444w[2..2]);
	w_anode3514w[] = ( (w_anode3514w[2..2] & w_data3249w[2..2]), (w_anode3514w[1..1] & w_data3249w[1..1]), (w_anode3514w[0..0] & (! w_data3249w[0..0])), w_anode3444w[2..2]);
	w_anode3524w[] = ( (w_anode3524w[2..2] & w_data3249w[2..2]), (w_anode3524w[1..1] & w_data3249w[1..1]), (w_anode3524w[0..0] & w_data3249w[0..0]), w_anode3444w[2..2]);
	w_anode3535w[] = ( (w_anode3535w[1..1] & data_wire[4..4]), (w_anode3535w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3544w[] = ( (w_anode3544w[2..2] & (! w_data3249w[2..2])), (w_anode3544w[1..1] & (! w_data3249w[1..1])), (w_anode3544w[0..0] & (! w_data3249w[0..0])), w_anode3535w[2..2]);
	w_anode3555w[] = ( (w_anode3555w[2..2] & (! w_data3249w[2..2])), (w_anode3555w[1..1] & (! w_data3249w[1..1])), (w_anode3555w[0..0] & w_data3249w[0..0]), w_anode3535w[2..2]);
	w_anode3565w[] = ( (w_anode3565w[2..2] & (! w_data3249w[2..2])), (w_anode3565w[1..1] & w_data3249w[1..1]), (w_anode3565w[0..0] & (! w_data3249w[0..0])), w_anode3535w[2..2]);
	w_anode3575w[] = ( (w_anode3575w[2..2] & (! w_data3249w[2..2])), (w_anode3575w[1..1] & w_data3249w[1..1]), (w_anode3575w[0..0] & w_data3249w[0..0]), w_anode3535w[2..2]);
	w_anode3585w[] = ( (w_anode3585w[2..2] & w_data3249w[2..2]), (w_anode3585w[1..1] & (! w_data3249w[1..1])), (w_anode3585w[0..0] & (! w_data3249w[0..0])), w_anode3535w[2..2]);
	w_anode3595w[] = ( (w_anode3595w[2..2] & w_data3249w[2..2]), (w_anode3595w[1..1] & (! w_data3249w[1..1])), (w_anode3595w[0..0] & w_data3249w[0..0]), w_anode3535w[2..2]);
	w_anode3605w[] = ( (w_anode3605w[2..2] & w_data3249w[2..2]), (w_anode3605w[1..1] & w_data3249w[1..1]), (w_anode3605w[0..0] & (! w_data3249w[0..0])), w_anode3535w[2..2]);
	w_anode3615w[] = ( (w_anode3615w[2..2] & w_data3249w[2..2]), (w_anode3615w[1..1] & w_data3249w[1..1]), (w_anode3615w[0..0] & w_data3249w[0..0]), w_anode3535w[2..2]);
	w_data3249w[2..0] = data_wire[2..0];
END;
--VALID FILE
